// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // for local development
  url      = "postgres://neondb_owner:ubOf9t3nwqFE@ep-patient-cell-a4ocfhq1-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require"
  // for Vercel
  // url       = "postgres://neondb_owner:ubOf9t3nwqFE@ep-patient-cell-a4ocfhq1-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require&pgbouncer=true&connect_timeout=15"
  // directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role   @default(USER)
}

enum Condition {
  excellent
  good
  fair
  poor
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition
  owner     String
}

model Company {
  id        Int        @id @default(autoincrement())
  name      String
  overview  String
  location  String
  positions Position[]
  links     String[]
  emails    String[]
}

enum JobType {
  PERMANENT
  INTERNSHIP
  TEMPORARY
}

model Position {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  skills        String[]
  jobType       JobType[]
  numberOfHires Int
  salarayRange  String
  company       Company   @relation(fields: [companyId], references: [id])
  companyId     Int
}

model Student {
  id               Int      @id @default(autoincrement())
  name             String
  skills           String[]
  professionalPage String
}
